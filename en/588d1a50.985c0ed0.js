(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{151:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(9),b=(a(0),a(179)),c={id:"cpts",title:"Post Types Personalizados",sidebar_label:"Post Types"},l={id:"cpts",isDocsHomePage:!1,title:"Post Types Personalizados",description:"Onyx provides the possibility of creating custom Post Types that can be done in two ways. The first through this file ./core/config/cpts.php and the other is by instantiating an object of the class \\Onyx\\Cpt().",source:"@site/docs/cpts.md",permalink:"/onyx-theme-doc/en/docs/cpts",editUrl:"https://github.com/andremacola/onyx-theme-doc/edit/master/website/docs/cpts.md",sidebar_label:"Post Types",sidebar:"Sidebar",previous:{title:"Theme Features",permalink:"/onyx-theme-doc/en/docs/support"},next:{title:"Custom Taxonomies",permalink:"/onyx-theme-doc/en/docs/taxonomies"}},i=[{value:"Parameters",id:"parameters",children:[]},{value:"Creating Post Types",id:"creating-post-types",children:[]},{value:"Search Filters",id:"search-filters",children:[]},{value:"Custom Admin Columns",id:"custom-admin-columns",children:[{value:"add",id:"add",children:[]},{value:"order",id:"order",children:[]},{value:"hide",id:"hide",children:[]},{value:"Example of use",id:"example-of-use",children:[]}]},{value:"Instantiating a Post Type",id:"instantiating-a-post-type",children:[]}],o={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Onyx")," provides the possibility of creating custom Post Types that can be done in two ways. The first through this file ",Object(b.b)("inlineCode",{parentName:"p"},"./core/config/cpts.php")," and the other is by instantiating an object of the class ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"class-cpt"}),Object(b.b)("inlineCode",{parentName:"a"},"\\Onyx\\Cpt()")),"."),Object(b.b)("hr",null),Object(b.b)("h2",{id:"parameters"},"Parameters"),Object(b.b)("p",null,"The only Required parameter is the ",Object(b.b)("inlineCode",{parentName:"p"},"name(s)")," of the post type and can be a ",Object(b.b)("em",{parentName:"p"},"string")," as we can see in ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#creating-post-types"}),Object(b.b)("em",{parentName:"a"},"Example 1"))," or an ",Object(b.b)("em",{parentName:"p"},"array")," as in ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#creating-post-types"}),Object(b.b)("em",{parentName:"a"},"Example 2")),". Onyx will automatically extract ",Object(b.b)("inlineCode",{parentName:"p"},"slug"),", ",Object(b.b)("inlineCode",{parentName:"p"},"labels"),", ",Object(b.b)("inlineCode",{parentName:"p"},"options")," if they are not provided as well as try to apply ",Object(b.b)("em",{parentName:"p"},"plural")," to the necessary labels."),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"If ",Object(b.b)("strong",{parentName:"p"},"not provided"),", the parameter ",Object(b.b)("inlineCode",{parentName:"p"},"slug")," will be used to create the post type and it is the one that should be used for queries and relationships. By default, ",Object(b.b)("inlineCode",{parentName:"p"},"slug")," is extracted from the value ",Object(b.b)("inlineCode",{parentName:"p"},"name")," transformed to the plural."),Object(b.b)("p",{parentName:"div"},Object(b.b)("em",{parentName:"p"},"Ex: 'Custom Product' plural will be 'Custom Products' and slug 'custom-products'.")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"name(s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"string/array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Post Type name"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2714")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"icon")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"string")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Post Type icon"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"labels")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Custom labels"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"options")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Operating arguments"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"filters")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Admin search filters (selects for ",Object(b.b)("em",{parentName:"td"},"taxonomies"),")"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"columns")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Register custom columns in the admin"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")))),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"To learn about options for ",Object(b.b)("inlineCode",{parentName:"p"},"labels")," and",Object(b.b)("inlineCode",{parentName:"p"}," options"),", visit the WordPress instructions ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.wordpress.org/reference/functions/register_post_type/"}),"register_post_type()")," and ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.wordpress.org/reference/functions/get_post_type_labels/"}),"get_post_type_labels()")))),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"When adding parameters like ",Object(b.b)("inlineCode",{parentName:"p"},"labels")," or",Object(b.b)("inlineCode",{parentName:"p"}," options"),", you do not need to include all options. Only the parameters you determine will be replaced in the model."))),Object(b.b)("hr",null),Object(b.b)("h2",{id:"creating-post-types"},"Creating Post Types"),Object(b.b)("p",null,"Using this method, you ",Object(b.b)("strong",{parentName:"p"},"don't need")," to instantiate the class  ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"instanciando-um-post-type"}),Object(b.b)("inlineCode",{parentName:"a"},"\\Onyx\\Cpt()")),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"  /*\n  |--------------------------------------------------------------------------\n  | My First Post Type (example 1)\n  |--------------------------------------------------------------------------\n  */\n  [ 'My First CPT' ],\n\n  /*\n  |--------------------------------------------------------------------------\n  | My Second Post Type (example 2)\n  |--------------------------------------------------------------------------\n  */\n  [\n    'names'   => [\n      'name'   => 'Product',   // required\n      'plural' => 'Products' , // optional\n      'slug'   => 'produtct' , // optional\n    ],\n    'icon' => 'dashicons-admin-post',\n    'labels'  => [\n      // all labels options from\n      // https://developer.wordpress.org/reference/functions/get_post_type_labels/\n    ],\n    'options' => [\n      // all available arguments from `register_post_type` except `labels`\n      // https://developer.wordpress.org/reference/functions/register_post_type/\n    ],\n  ],\n")),Object(b.b)("hr",null),Object(b.b)("h2",{id:"search-filters"},"Search Filters"),Object(b.b)("p",null,"When registering a custom ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"taxonomies"}),"Taxonomy"),", you can also add search filters to the WordPress admin listing table"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"  /*\n  |--------------------------------------------------------------------------\n  | Post type with custom admin filters\n  |--------------------------------------------------------------------------\n  */\n  [\n    'My First CPT',\n    'filters' => [ 'my-custom-tax', 'other-custom-tax' ],\n  ],\n")),Object(b.b)("hr",null),Object(b.b)("h2",{id:"custom-admin-columns"},"Custom Admin Columns"),Object(b.b)("p",null,"You can ",Object(b.b)("strong",{parentName:"p"},"include"),", ",Object(b.b)("strong",{parentName:"p"},"remove")," or ",Object(b.b)("strong",{parentName:"p"},"reorder")," custom columns in the WordPress admin listing table when registering a Post Type. This is very useful when you have ",Object(b.b)("em",{parentName:"p"},"custom fields")," or ",Object(b.b)("em",{parentName:"p"},"custom taxonomies")),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"To add columns for ",Object(b.b)("strong",{parentName:"p"},"taxonomies"),", see entry in ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"taxonomies"}),"Taxonomy"),"."))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"add")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Columns to add"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"order")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Columns order"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"hide")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"array")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Remove Columns"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")))),Object(b.b)("h3",{id:"add"},"add"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Param"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"label")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"string")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Column label"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2714")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"populate")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"callable")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Function that receives 2 values ",Object(b.b)("inlineCode",{parentName:"td"},"fn($column, $post_id)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2714")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"sort")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"string")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Meta Key for sorting"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"numeric")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("em",{parentName:"td"},"bool")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Sort via numeric or string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2718")))),Object(b.b)("h3",{id:"order"},"order"),Object(b.b)("p",null,"An array with the ",Object(b.b)("inlineCode",{parentName:"p"},"key or column name"),". The columns will appear in the order of inclusion within the array."),Object(b.b)("h3",{id:"hide"},"hide"),Object(b.b)("p",null,"An array with the ",Object(b.b)("inlineCode",{parentName:"p"},"key or column name"),". Columns added here will be removed from the admin list table."),Object(b.b)("h3",{id:"example-of-use"},"Example of use"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"  /*\n  |--------------------------------------------------------------------------\n  | Products Post Type with Custom Columns\n  |--------------------------------------------------------------------------\n  */\n  [\n    'names'   => [\n      'name'   => 'Product',   // required\n      'slug'   => 'produtct' , // optional\n    ],\n    'columns' => [\n      'add'   => [\n        'column-1' => [\n          'label'    => 'Column 1',           // column label\n          'sort'     => 'meta_field_1',       // sort by meta_field_1\n          'numeric'  => false,                // is alphabetically\n          'populate' => 'get_meta_field_1',   // get content from get_meta_field_1() function\n        ],\n        'column-2' => [\n          'label'    => 'Column 2',           // column label\n          'sort'     => 'meta_field_2',       // sort by meta_field_1\n          'numeric'  => true,                 // is numeric\n          'populate' => 'get_meta_field_2',   // get content from get_meta_field_2() function\n        ],\n      ],\n      'order' => [\n        'my-custom-tax', // first column\n        'column-1',      // second column\n        'title',         // third column\n      ],\n      'hide'  => [ 'author' ], // hide author column\n    ],\n  ],\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"// Populate Column 1 with ACF\nfunction get_meta_field_1($column, $post_id) {\n  return get_field('meta_field_1', $post_id);\n}\n\n// Populate Column 2 with ACF\nfunction get_meta_field_2($column, $post_id) {\n  return get_field('meta_field_2', $post_id);\n}\n")),Object(b.b)("hr",null),Object(b.b)("h2",{id:"instantiating-a-post-type"},"Instantiating a Post Type"),Object(b.b)("p",null,"In addition to being able to create a Post Type using the record in the ",Object(b.b)("inlineCode",{parentName:"p"},"./core/config/cpts.php")," file, you can instantiate an object and manually create its CPT using the class ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"class-cpt"}),Object(b.b)("inlineCode",{parentName:"a"},"\\Onyx\\Cpt"))),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"only the parameter ",Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"name(s)"))," is required, it can either be a ",Object(b.b)("em",{parentName:"p"},"string")," or an ",Object(b.b)("em",{parentName:"p"},"array"),"."))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"  $cpt = new \\Onyx\\Cpt();\n\n  // assign post type names\n  $cpt->names([\n    'name'   => 'Product',\n    'plural' => 'Products',\n    'slug'   => 'product',\n  ]);\n\n  // assign post type arguments\n  $cpt->options([\n    'show_in_rest'  => true,\n    'menu_position' => 10,\n    'supports'      => ['title', 'editor', 'thumbnail'],\n  ]);\n\n  // set post type icon\n  $cpt->icon('dashicons-admin-page');\n\n  // add search taxonomy filters\n  $cpt->filters( ['my-custom-taxonomy', 'my-other-taxonomy'] );\n\n  // METHOD 1: Add Columns\n  $cpt->columns()->register_columns([\n    'column-1' => [\n      'label'    => 'Column 1',           // column label\n      'sort'     => 'meta_field_1',       // sort by meta_field_1\n      'numeric'  => false,                // is alphabetically\n      'populate' => 'get_meta_field_1',   // get content from get_meta_field_1() function\n    ],\n  ]);\n    \n  // METHOD 2: Add Columns\n  $cpt->columns()->add('Column 2');\n  $cpt->columns()->populate('Column 2', 'get_meta_field_2');\n  $cpt->columns()->set_sortable( [\n    'Column 2'  => [ 'meta_field_2', true ],\n  ]);\n    \n  // hide columns\n  $cpt->columns()->hide( [ 'author' ] );\n    \n  // change columns order\n  $cpt->columns()->order([\n    'Date',\n    'Column 1',\n    'Column 2',\n    'Title',\n  ]);\n\n  // register post type\n  $cpt->register();\n")))}p.isMDXComponent=!0},179:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,O=m["".concat(c,".").concat(d)]||m[d]||s[d]||b;return a?r.a.createElement(O,l(l({ref:t},o),{},{components:a})):r.a.createElement(O,l({ref:t},o))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var o=2;o<b;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);